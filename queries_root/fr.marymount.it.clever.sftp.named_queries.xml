<queries>
	<query name="fr.marymount.it.clever.schools" coreTable="SCHOOLS" flattened="true">
	    <description>MISP Clever SFTP schools.csv</description>
	    <args>
	    </args>
	    <columns>
	    <column column="SCHOOLS.SCHOOL_NUMBER">School_id</column>
	    <column column="SCHOOLS.NAME">School_name</column>
	    <column column="SCHOOLS.SCHOOL_NUMBER">School_number</column>
	    <column column="SCHOOLS.LOW_GRADE">Low_grade</column>
	    <column column="SCHOOLS.HIGH_GRADE">High_grade</column>
		<column column="SCHOOLS.PRINCIPAL">Principal</column>
		<column column="SCHOOLS.PRINCIPALEMAIL">Principal_email</column>
		<column column="SCHOOLS.SCHOOLADDRESS">School_address</column>
		<column column="SCHOOLS.SCHOOLCITY">School_city</column>
		<column column="SCHOOLS.SCHOOLSTATE">School_state</column>
		<column column="SCHOOLS.SCHOOLZIP">School_zip</column>
		<column column="SCHOOLS.SCHOOLPHONE">School_phone</column>
			</columns>
	    <sql>
			<![CDATA[
			select
			schools.school_number as school_id,
			schools.name as School_name,
			schools.school_number as School_number,
			case
			  when schools.low_grade = -3 then 'InfantToddler'
			  when schools.low_grade = -1 then 'Preschool'
			  when schools.low_grade = -1 then 'PreKindergarten'
			  when schools.low_grade = 0 then 'Kindergarten'
			  when schools.low_grade > 12 then 'Postgraduate'
			  else to_char(schools.low_grade)
			end as Low_grade,
			case 
			  when schools.high_grade = -3 then 'InfantToddler'
			  when schools.high_grade = -1 then 'Preschool'
			  when schools.high_grade = -1 then 'PreKindergarten'
			  when schools.high_grade = 0 then 'Kindergarten'
			  when schools.high_grade > 12 then 'Postgraduate'
			  else to_char(schools.high_grade)
			end as High_grade,
			schools.principal,
			schools.principalemail as Principal_email,
			schools.schooladdress as School_address,
			schools.schoolcity as School_city,
			schools.schoolstate as School_state,
			schools.schoolzip as School_zip,
			schools.schoolphone as School_phone
			FROM schools
			WHERE school_number < 999999
			]]>
	    </sql>
	</query>

	<query name="fr.marymount.it.clever.students" coreTable="STUDENTS" flattened="true">
	    <description>MISP Clever SFTP students.csv</description>
	    <args>
	    </args>
	    <columns>
	    <column column="STUDENTS.SCHOOLID">School_id</column>
	    <column column="STUDENTS.ID">Student_id</column>
	    <column column="STUDENTS.STUDENT_NUMBER">Student_number</column>
	    <column column="STUDENTS.STATE_STUDENTNUMBER">State_id</column>
	    <column column="STUDENTS.LAST_NAME">Last_name</column>
	    <column column="STUDENTS.MIDDLE_NAME">Middle_name</column>
	    <column column="STUDENTS.FIRST_NAME">First_name</column>
	    <column column="STUDENTS.GRADE_LEVEL">Grade</column>
	    <column column="STUDENTS.GENDER">Gender</column>
	    <column column="STUDENTS.DOB">DOB</column>
	    <column column="STUDENTS.ETHNICITY">Race</column>
	    <column column="STUDENTS.FEDETHNICITY">Hispanic_Latino</column>
	    <column column="U_DEF_EXT_STUDENTS.ADMISS_SSPRO_EAL">Ell_status</column>
	    <column column="STUDENTS.LUNCHSTATUS">Frl_status</column>
	    <column column="U_DEF_EXT_STUDENTS.ADMISS_SSPRO_ILC">IEP_status</column>
	    <column column="STUDENTS.STREET">Student_street</column>
	    <column column="STUDENTS.CITY">Student_city</column>
	    <column column="STUDENTS.STATE">Student_state</column>
	    <column column="STUDENTS.ZIP">Student_zip</column>
	    <column column="U_DEF_EXT_STUDENTS.EMAIL">Student email</column>
	    <column column="U_DEF_EXT_STUDENTS.EMAIL">Username</column>
	    <column column="U_DEF_EXT_STUDENTS.PASSWORD">Password</column>
			</columns>
	    <sql>
			<![CDATA[
SELECT
	st.schoolid as School_id,
	st.ID as student_id,
	st.student_number as Student_number,
	st.State_StudentNumber as State_id,
	st.last_name as Last_name,
	st.middle_name as Middle_name,
	st.first_name as First_name,
CASE
WHEN st.grade_level = -3 THEN
	'InfantToddler'
WHEN st.grade_level = -2 THEN
	'Preschool'
WHEN st.grade_level = -1 THEN
	'PreKindergarten'
WHEN st.grade_level = 0 THEN
	'Kindergarten'
WHEN st.grade_level > 12 THEN
	'Postgraduate'
ELSE
	TO_CHAR(st.grade_level)
END AS Grade,
 st.gender as Gender,
 TO_CHAR(st.dob, 'mm/dd/yyyy') dob,
 CASE
WHEN st.Ethnicity IN('A', 'B', 'I', 'M', 'P', 'W') THEN
	st.Ethnicity
ELSE
	''
END AS Race,
 CASE
WHEN st.FedEthnicity = 1 THEN
	'Y'
ELSE
	'N'
END AS Hispanic,
 CASE
WHEN stext.admiss_sspro_eal = 'Yes' THEN
	'Y'
ELSE
	'N'
END AS ell_status,
 st.LunchStatus,
 CASE
WHEN stext.admiss_sspro_ilc = 'Yes' THEN
	'Y'
ELSE
	'N'
END AS IEP_status,
 st.street,
 st.city,
 st.state,
 st.zip,
 stext.email as Student_email,
 stext.email as Username,
 stext.password as Password
 
FROM students st
INNER JOIN u_def_ext_students stext ON st.dcid = stext.studentsdcid
WHERE st.enroll_status = 0
			]]>
	    </sql>
	</query>

    <query name="fr.marymount.it.clever.teachers" coreTable="TEACHERS" flattened="true">
        <description>MISP Clever SFTP teachers.csv</description>
        <args>
        </args>
        <columns>
        <column column="TEACHERS.SCHOOLID">School_id</column>
        <column column="TEACHERS.ID">Teacher_id</column>
        <column column="TEACHERS.TEACHERNUMBER">Teacher_number</column>
        <column column="TEACHERS.EMAIL_ADDR">Teacher_email</column>
        <column column="TEACHERS.FIRST_NAME">First_name</column>
        <column column="TEACHERS.MIDDLE_NAME">Middle_name</column>
        <column column="TEACHERS.LAST_NAME">Last_name</column>
        <column column="TEACHERS.TITLE">Title</column>
        <column column="TEACHERS.EMAIL_ADDR">Username</column>
 		</columns>
        <sql>
			<![CDATA[
			SELECT
				teachers.schoolid as School_id,
				teachers.id as Teacher_id,
				teachers.teachernumber as Teacher_number,
				teachers.email_addr as Teacher_email,
				teachers.first_name as First_name,
				teachers.middle_name as Middle_name,
				teachers.last_name as Last_name,
				teachers.title as Title,
				teachers.email_addr as Username
			FROM teachers
			INNER JOIN
			(SELECT email_addr, min(id) as id
				 FROM teachers group by email_addr) uniq
				 ON teachers.email_addr = uniq.email_addr
				 AND teachers.id = uniq.id
			WHERE teachers.status = 1
			]]>
        </sql>
    </query>

    <query name="fr.marymount.it.clever.admins" coreTable="TEACHERS" flattened="true">
        <description>MISP Clever SFTP staff.csv</description>
        <args>
        </args>
        <columns>
        <column column="TEACHERS.HOMESCHOOLID">School_id</column>
        <column column="TEACHERS.DCID">Staff_id</column>
        <column column="TEACHERS.EMAIL_ADDR">Admin_email</column>
        <column column="TEACHERS.FIRST_NAME">First_name</column>
        <column column="TEACHERS.LAST_NAME">Last_name</column>
        <column column="TEACHERS.TITLE">Admin_title</column>
        <column column="TEACHERS.EMAIL_ADDR">Username</column>
        <column column="TEACHERS.HOME_PHONE">ext.Phone</column>
 		</columns>
        <sql>
	        
			<![CDATA[
			SELECT
				'DEFAULT_DISTRICT_OFFICE' as School_id,
				dcid,
				email_addr,
				first_name,
				last_name,
				title,
				email_addr as username,
				home_phone
			FROM teachers
			WHERE (psaccess = 1 and groupvalue in (1,2,3,4,9,10,11) and status = 1)
			]]>
        </sql>
    </query>

    <query name="fr.marymount.it.clever.sections" coreTable="SECTIONS" flattened="true">
        <description>MISP Clever SFTP sections.csv</description>
        <args>
  	    <arg name="termprefix" column="CC.TERMID" type="primitive" required="true" default = "31" />
        </args>
        <columns>
        <column column="SECTIONS.SCHOOLID">School_id</column>
        <column column="SECTIONS.ID">Section_id</column>
        <column column="SECTIONS.TEACHER">Teacher_id</column>
        <column column="SECTIONS.TEACHER">Teacher_2_id</column>
        <column column="SECTIONS.TEACHER">Teacher_3_id</column>
        <column column="SECTIONS.TEACHER">Teacher_4_id</column>
        <column column="SECTIONS.COURSE_NUMBER">Name</column>
        <column column="SECTIONS.SECTION_NUMBER">Section_number</column>
        <column column="SECTIONS.GRADE_LEVEL">Grade</column>
        <column column="COURSES.COURSE_NAME">Course_name</column>
        <column column="SECTIONS.COURSE_NUMBER">Course_number</column>
        <column column="SECTIONS.COURSE_NUMBER">Course_description</column>
        <column column="SECTIONS.EXPRESSION">Period</column>
        <column column="SECTIONS.EXPRESSION">Subject</column>
        <column column="TERMS.NAME">Term_name</column>
        <column column="TERMS.FIRSTDAY">Term_start</column>
        <column column="TERMS.LASTDAY">Term_end</column>
 		</columns>
        <sql>
			<![CDATA[
			SELECT
			sec.schoolid as School_id,
			sec.id as Section_id,
			sec.teacher as Teacher_id,
			(select teacherid from (select teacherid, rownum rn from SectionTeacher 
				where sectionteacher.roleid != 21
				and SectionTeacher.sectionid = sec.id
				order by teacherid) where rn = 1) as Teacher_2_id,
				(select teacherid from (select teacherid, rownum rn from SectionTeacher 
				where sectionteacher.roleid != 21
				and SectionTeacher.sectionid = sec.id
				order by teacherid) where rn = 2) as Teacher_3_id,
			(select teacherid from (select teacherid, rownum rn from SectionTeacher 
				where sectionteacher.roleid != 21
				and SectionTeacher.sectionid = sec.id
				order by teacherid) where rn = 3) as Teacher_4_id,
			courses.course_name||' with '||teachers.first_name||' '||teachers.last_name||' ('||courses.course_number||'.'||sec.section_number||')' as Name,
			sec.section_number as Section_Number,
			case 
			  when sec.grade_level = -3 then 'InfantToddler'
			  when sec.grade_level = -1 then 'Preschool'
			  when sec.grade_level = -1 then 'PreKindergarten'
			  when sec.grade_level = 0 then 'Kindergarten'
			  when sec.grade_level > 12 then 'Postgraduate'
			  else to_char(sec.grade_level)
			end as Grade,
			courses.course_name,
			sec.course_number,
			'' as course_description,
			sec.expression as Period,
			'' as subject,
			(select name from terms where id = sec.termid and schoolid = sec.schoolid) Term_name,
			TO_CHAR((select firstday from terms where id = sec.termid and schoolid = sec.schoolid),'MM/DD/YYYY') Term_start,
			TO_CHAR((select lastday from terms where id = sec.termid and schoolid = sec.schoolid),'MM/DD/YYYY') Term_end
			from sections sec
			join courses  on courses.course_number = sec.course_number
			join teachers on sec.teacher = teachers.id
			where SUBSTR(TO_CHAR(sec.termid),1,2) = :termprefix
			]]>
        </sql>
    </query>

    <query name="fr.marymount.it.clever.enrollments" coreTable="CC" flattened="true">
        <description>MISP CLever SFTP enrollments.csv</description>
        <args>
  	    <arg name="termprefix" column="CC.TERMID" type="primitive" required="true" default = "31" />
        </args>
        <columns>
        <column column="CC.SCHOOLID">School_id</column>
        <column column="CC.SECTIONID">Section_id</column>
        <column column="CC.STUDENTID">Student_id</column>
 		</columns>
        <sql>
	        
			<![CDATA[
			select
				c.schoolid as School_id,
				c.sectionid as Section_id,
				c.studentid as Student_id
			from cc c
			join students stu on stu.id = c.studentid
			where stu.enroll_status = 0
			AND SUBSTR(TO_CHAR(c.termid),1,2) = :termprefix
			]]>
        </sql>
    </query>
</queries>